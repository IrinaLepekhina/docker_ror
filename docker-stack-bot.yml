version: '3.8'

services:
  bot:
    image: ghcr.io/irinalepekhina/tg_bot:latest
    ports:
      - "3001:3000"
    env_file:
      - ./tg_bot/env/production/database
      - ./tg_bot/env/production/web
    networks:
      - front
      - muul_web_tg
      - proxy_main
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      resources:
        limits:
          memory: 128M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.muul_bot.rule=Host(`tg2.muul.ru`)"
        - "traefik.http.routers.muul_bot.service=muul_bot"
        - "traefik.http.routers.muul_bot.tls.certresolver=le"
        - "traefik.http.routers.muul_bot.entrypoints=websecure,web"
        - "traefik.http.services.muul_bot.loadbalancer.server.port=3001"
        - "traefik.http.services.muul_bot.loadbalancer.passhostheader=true"



  bot_redis:
    image: redis/redis-stack:latest
    ports:
      - "6380:6379"
    networks:
      - front
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s

  bot_db:
    image: postgres:latest
    env_file:
      - ./tg_bot/env/production/database
    volumes:
      - db_data_bot:/var/lib/postgresql/data
    networks:
      - front
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s

  bot_db_migrator:
    image: ghcr.io/irinalepekhina/tg_bot:latest
    command: ["./wait-for", "--timeout=500", "bot_db:5432", "--",
      "bin/rails",  "db:migrate", "--trace"]
    env_file:
      - ./tg_bot/env/production/database
      - ./tg_bot/env/production/web
    networks:
      - front
    deploy:
      restart_policy:
        condition: none

  bot2web_signup:
    image: ghcr.io/irinalepekhina/tg_bot:latest
    command: ["./wait-for", "--timeout=90", "bot:3000", "--",
      "ruby", "bin/initializing_bot_user.rb"]
    env_file:
      - ./tg_bot/env/production/database
      - ./tg_bot/env/production/web
    networks:
      - front
      - muul_web_tg
    deploy:
      restart_policy:
        condition: none

  bot_webhook:
    image: ghcr.io/irinalepekhina/tg_bot:latest
    command: ["./wait-for", "--timeout=90", "bot:3000", "--",
      "ruby", "bin/set_telegram_webhook.rb"]
    env_file:
      - ./tg_bot/env/production/database
      - ./tg_bot/env/production/web
    networks:
      - front
    deploy:
      restart_policy:
        condition: none

networks:
  front:
    driver: overlay
    name: muul_front
  muul_web_tg:
    external: true
  proxy_main:
    external: true

volumes:
  db_data_bot: